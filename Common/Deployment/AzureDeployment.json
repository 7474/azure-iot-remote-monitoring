{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "name": {
            "type": "string",
            "metadata": {
                "description": "Prefix for solution name"
            }
        },
        "ENCRYPTED_VALUE": {
            "type": "string",
            "defaultValue": "encrypted"
        },
        "PFX": {
            "type": "string",
            "defaultValue": "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"
        },
        "THUMBPRINT": {
            "type": "string",
            "defaultValue": "165b7ed676e12e6b3decd42655586b746da8b705"
        }
    },

    "variables": {
        "tempIotHubCG": "",
        "tempIotHubPath": "ihrpdfblu001-iothub-ehub-jameswebte-100-a7c799e79f",
        "tempIotHubNamespace": "ihrpdfblusb05",
        "tempIotHubKey": "ypQC/sjKLO4sRRjG+6R6HfZ23RKFO4FP+I/llS10JO8=",
        "tempIotHubKeyName": "owner",
        "storageAccountType": "Standard_LRS",
        "location": "[resourceGroup().location]",
        "storageVersion": "[providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]]",
        "storageName": "[toLower(concat(parameters('name'), 'store'))]",
        "storageId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]",
        "sbVersion": "[providers('Microsoft.Eventhub', 'namespaces').apiVersions[0]]",
        "sbName": "[concat(parameters('name'), '-servicebus')]",
        "ehName": "[concat(parameters('name'), '-eventhhub')]",
        "sbResourceId": "[resourceId('Microsoft.Eventhub/namespaces/authorizationRules', variables('sbName'), 'RootManageSharedAccessKey')]",
        "docDbVersion": "[providers('Microsoft.DocumentDb', 'databaseAccounts').apiVersions[0]]",
        "docDbName": "[toLower(concat(parameters('name'), '-DocDB'))]",
        "saVersion": "2015-06-01"
    },

    "resources": [
        {
            "apiVersion": "[variables('docDbVersion')]",
            "type": "Microsoft.DocumentDb/databaseAccounts",
            "name": "[variables('docDbName')]",
            "location": "[variables('location')]",
            "properties": {
                "name": "[variables('docDbName')]",
                "databaseAccountOfferType": "Standard"
            }
        },
        {
            "apiVersion": "[variables('storageVersion')]",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageName')]",
            "location": "[variables('location')]",
            "properties": { "accountType": "[variables('storageAccountType')]" }
        },
        {
            "apiVersion": "[variables('sbVersion')]",
            "name": "[variables('sbName')]",
            "type": "Microsoft.Eventhub/namespaces",
            "location": "[variables('location')]",
            "properties": {
                "region": "[variables('location')]"
            },
            "resources": [
                {
                    "apiVersion": "[variables('sbVersion')]",
                    "name": "[variables('ehName')]",
                    "type": "eventHubs",
                    "location": "East US",
                    "dependsOn": [
                        "[concat('Microsoft.Eventhub/namespaces/', variables('sbName'))]"
                    ],
                    "properties": {
                        "path": "[variables('ehName')]"
                    }
                }
            ]
        },
        {
            "apiVersion": "[variables('saVersion')]",
            "type": "Microsoft.StreamAnalytics/streamingjobs",
            "name": "[concat(parameters('name'), '-Telemetry')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageName'))]"
            ],
            "properties": {
                "sku": { "name": "standard" },
                "EventsOutOfOrderMaxDelayInSeconds": 10,
                "EventsOutOfOrderPolicy": "adjust",
                "Inputs": [
                    {
                        "Name": "IoTHubStream",
                        "Properties": {
                            "DataSource": {
                                "Properties": {
                                    "ConsumerGroupName": "[variables('tempIotHubCG')]",
                                    "EventHubName": "[variables('tempIotHubPath')]",
                                    "ServiceBusNamespace": "[variables('tempIotHubNamespace')]",
                                    "SharedAccessPolicyKey": "[variables('tempIotHubKey')]",
                                    "SharedAccessPolicyName": "[variables('tempIotHubKeyName')]"
                                },
                                "Type": "Microsoft.ServiceBus/EventHub"
                            },
                            "Serialization": {
                                "Properties": {
                                    "Encoding": "UTF8"
                                },
                                "Type": "Json"
                            },
                            "Type": "Stream"
                        }
                    }
                ],
                "Outputs": [
                    {
                        "Name": "StreamOutput",
                        "Properties": {
                            "DataSource": {
                                "Properties": {
                                    "Container": "DeviceTelemetry",
                                    "DateFormat": "yyyy/MM/dd",
                                    "TimeFormat": "HH",
                                    "PathPattern": "Output/logs/{date}/{time}",
                                    "StorageAccounts": [
                                        {
                                            "AccountKey": "[listkeys(variables('storageId'), variables('storageVersion')).key1]",
                                            "AccountName": "[variables('storageName')]"
                                        }
                                    ]
                                },
                                "Type": "Microsoft.Storage/Blob"
                            },
                            "Serialization": {
                                "Properties": {
                                    "Encoding": "UTF8",
                                    "Format": "Array"
                                },
                                "Type": "Json"
                            }
                        }
                    },
                    {
                        "Name": "SummaryOutput",
                        "Properties": {
                            "DataSource": {
                                "Properties": {
                                    "Container": "DeviceTelemetrySummary",
                                    "DateFormat": "yyyy/MM/dd",
                                    "TimeFormat": "HH",
                                    "PathPattern": "Output/logs/{date}/{time}",
                                    "StorageAccounts": [
                                        {
                                            "AccountKey": "[listkeys(variables('storageId'), variables('storageVersion')).key1]",
                                            "AccountName": "[variables('storageName')]"
                                        }
                                    ]
                                },
                                "Type": "Microsoft.Storage/Blob"
                            },
                            "Serialization": {
                                "Properties": {
                                    "Encoding": "UTF8",
                                    "Format": "Array"
                                },
                                "Type": "Json"
                            }
                        }
                    }
                ],
                "Transformation": {
                    "Name": "AllToBlob",
                    "Properties": {
                        "Query": "WITH [StreamData] AS (SELECT * FROM [IoTHubStream] TIMESTAMP BY Time) SELECT * INTO [StreamOutput] FROM [StreamData] SELECT AVG(Humidity) AS [AverageHumidity], MIN(Humidity) AS [MinimumHumidity], MAX(Humidity) AS [MaxHumidity], 5.0 AS TimeframeMinutes INTO [SummaryOutput] FROM [StreamData] WHERE [Humidity] IS NOT NULL GROUP BY SlidingWindow (mi, 5)",
                        "StreamingUnits": 1
                    }
                }
            }
        },
        {
            "apiVersion": "[variables('saVersion')]",
            "type": "Microsoft.StreamAnalytics/streamingjobs",
            "name": "[concat(parameters('name'), '-DeviceInfo')]",
            "location": "[variables('location')]",
            "dependsOn": [
                 "[concat('Microsoft.Eventhub/namespaces/', variables('sbName'))]"
            ],
            "properties": {
                "sku": { "name": "standard" },
                "EventsOutOfOrderMaxDelayInSeconds": 10,
                "EventsOutOfOrderPolicy": "adjust",
                "Inputs": [
                    {
                        "Name": "DeviceDataStream",
                        "Properties": {
                            "DataSource": {
                                "Properties": {
                                    "ConsumerGroupName": "[variables('tempIotHubCG')]",
                                    "EventHubName": "[variables('tempIotHubPath')]",
                                    "ServiceBusNamespace": "[variables('tempIotHubNamespace')]",
                                    "SharedAccessPolicyKey": "[variables('tempIotHubKey')]",
                                    "SharedAccessPolicyName": "[variables('tempIotHubKeyName')]"
                                },
                                "Type": "Microsoft.ServiceBus/EventHub"
                            },
                            "Serialization": {
                                "Properties": {
                                    "Encoding": "UTF8"
                                },
                                "Type": "Json"
                            },
                            "Type": "Stream"
                        }
                    }
                ],
                "Outputs": [
                    {
                        "Name": "DeviceInfoEvents",
                        "Properties": {
                            "DataSource": {
                                "Properties": {
                                    "EventHubName": "[variables('ehName')]",
                                    "ServiceBusNamespace": "[variables('sbName')]",
                                    "SharedAccessPolicyKey": "[variables('tempIotHubKey')]",
                                    "SharedAccessPolicyName": "[variables('tempIotHubKeyName')]",
                                    "PartitionKey": "PartitionId"
                                },
                                "Type": "Microsoft.ServiceBus/EventHub"
                            },
                            "Serialization": {
                                "Properties": {
                                    "Encoding": "UTF8",
                                    "Format": "Array"
                                },
                                "Type": "Json"
                            }
                        }
                    }
                ],
                "Transformation": {
                    "Name": "DeviceInfoFilter",
                    "Properties": {
                        "Query": "SELECT * FROM DeviceDataStream Partition By PartitionId WHERE  ObjectType = 'DeviceInfo'",
                        "StreamingUnits": 1
                    }
                }
            }
        }
    ],
    "outputs": {
        "sbEndpoint": { "type": "string", "value": "[reference(variables('sbName')).serviceBusEndpoint]" },
        "sbKey": { "type": "string", "value": "[listkeys(variables('sbResourceId'), variables('sbVersion')).primaryConnectionString]" },
        "eventHubPath": { "type": "string", "value": "[variables('ehName')]" },
        "storageName": { "type": "string", "value": "[variables('storageName')]" },
        "storagekey": { "type": "string", "value": "[listkeys(variables('storageId'), variables('storageVersion')).key1]" },
        "location": { "type": "string", "value": "[variables('location')]" },
        "docdbName": { "type": "string", "value": "[variables('docDbName')]" },
        "docdbUrl": { "type": "string", "value": "[reference(concat(parameters('name'), '-DocDB')).documentEndpoint]" },
        "docdbKey": { "type": "string", "value": "[listkeys(variables('docDbName'), variables('docDbVersion')).primaryMasterKey]" }
    }
}